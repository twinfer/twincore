# Action Invocation Logging Stream
# Replaces custom Parquet writer in wot_benthos_integration.go

input:
  resource: action_invocations_input

pipeline:
  processors:
    # Check license
    - label: check_license
      branch:
        request_map: |
          root = if !meta("skip_license_check").or(false) {
            "feature": "parquet_logging"
          }
        processors:
          - plugin:
              path: /etc/twincore/plugins/license_checker.wasm
          - catch:
              - mapping: |
                  root = if !exists("features.storage") || !this.features.storage.contains("parquet_logging") {
                    deleted()
                  }
    
    # Format action record
    - label: format_action_record
      mapping: |
        root.thing_id = this.thing_id
        root.action_name = this.action_name
        root.action_id = if this.action_id.exists() {
          this.action_id
        } else {
          uuid_v4()
        }
        root.input = this.input.string()
        root.timestamp = if meta("timestamp").exists() {
          meta("timestamp")
        } else {
          timestamp_unix_nano()
        }
    
    # Encode to Parquet
    - label: encode_parquet
      parquet_encode:
        schema:
          - name: thing_id
            type: BYTE_ARRAY
            converted_type: UTF8
            repetition_type: REQUIRED
          - name: action_name
            type: BYTE_ARRAY
            converted_type: UTF8
            repetition_type: REQUIRED
          - name: action_id
            type: BYTE_ARRAY
            converted_type: UTF8
            repetition_type: REQUIRED
          - name: input
            type: BYTE_ARRAY
            converted_type: UTF8
            repetition_type: REQUIRED
          - name: timestamp
            type: INT64
            converted_type: TIMESTAMP_NANOS
            repetition_type: REQUIRED
        default_compression: SNAPPY

output:
  label: action_parquet_output
  file:
    path: "${PARQUET_LOG_PATH:./twincore_data}/actions/actions_${!timestamp_unix():2006-01-02}.parquet"
    codec: all-bytes
  processors:
    - label: batch_actions
      batch:
        count: ${PARQUET_BATCH_SIZE:100}
        period: ${PARQUET_BATCH_PERIOD:5s}
        byte_size: ${PARQUET_BATCH_BYTES:5MB}

resources:
  - label: action_invocations_input
    inproc:
      name: action_invocations